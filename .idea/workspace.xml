<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9cfff823-d5b6-46ef-95ed-e2ecb48e1053" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="30cg1l9N8K7NxAtG1VfznfWnSuV" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.api-gateway: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.eureka-server: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.mongodb: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.notification-data-collector: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.notification-service: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.zookeeper: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Maven.api-gateway [clean].executor": "Run",
    "Maven.api-gateway [compile].executor": "Run",
    "Maven.api-gateway [install].executor": "Run",
    "Maven.eureka-server [clean].executor": "Run",
    "Maven.eureka-server [compile].executor": "Run",
    "Maven.eureka-server [deploy].executor": "Run",
    "Maven.eureka-server [install].executor": "Run",
    "Maven.notification-common [clean].executor": "Run",
    "Maven.notification-common [deploy].executor": "Run",
    "Maven.notification-common [install].executor": "Run",
    "Maven.notification-common [package].executor": "Run",
    "Maven.notification-data-collector [clean].executor": "Run",
    "Maven.notification-data-collector [compile].executor": "Run",
    "Maven.notification-data-collector [deploy].executor": "Run",
    "Maven.notification-data-collector [install].executor": "Run",
    "Maven.notification-data-collector [package].executor": "Run",
    "Maven.notification-service [clean].executor": "Run",
    "Maven.notification-service [compile].executor": "Run",
    "Maven.notification-service [install].executor": "Run",
    "Maven.notification-system [clean].executor": "Run",
    "Maven.notification-system [compile].executor": "Run",
    "Maven.notification-system [install].executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.EurekaServerApplication (1).executor": "Run",
    "Spring Boot.EurekaServerApplication.executor": "Run",
    "Spring Boot.NotificationDataCollectorApplication.executor": "Run",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "C:/Users/Elite_tea/Documents/project/new/notification-system/api-gateway",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "C:/Users/Elite_tea/Documents/project/new/notification-system/notification-common/src/main/java/com/example/Main.java",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.23103449",
    "run.configurations.included.in.services": "true",
    "settings.editor.selected.configurable": "bigdataide_conn_settings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Elite_tea\Documents\project\new\notification-system\api-gateway" />
      <recent name="C:\Users\Elite_tea\Documents\project\new\notification-system\eureka-server" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Elite_tea\Documents\project\new\notification-system\api-gateway" />
      <recent name="C:\Users\Elite_tea\Documents\project\new\notification-system" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn compile" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="KtorApplicationConfigurationType" />
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.testtask.api_gateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EurekaServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="eureka-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.testtask.EurekaServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationDataCollectorApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="notification-data-collector" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.testtask.notification_data_collector.NotificationDataCollectorApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="notification-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.testtask.notification_service.NotificationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.api-gateway: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="api-gateway" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.kafka: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="kafka" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.notification-data-collector: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="notification-data-collector" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.notification-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="notification-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.api-gateway: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.kafka: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.notification-data-collector: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.notification-service: Compose Deployment" />
      <item itemvalue="Spring Boot.ApiGatewayApplication" />
      <item itemvalue="Spring Boot.NotificationDataCollectorApplication" />
      <item itemvalue="Spring Boot.NotificationServiceApplication" />
      <item itemvalue="Spring Boot.EurekaServerApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.notification-data-collector: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.notification-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.api-gateway: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.kafka: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.25410.129" />
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-IU-251.25410.129" />
      </set>
    </attachedChunks>
  </component>
  <component name="StructureViewState">
    <option name="selectedTab" value="Logical" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9cfff823-d5b6-46ef-95ed-e2ecb48e1053" name="Changes" comment="" />
      <created>1753932063189</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1753932063189</updated>
      <workItem from="1753932064166" duration="8876000" />
      <workItem from="1753975901701" duration="1220000" />
      <workItem from="1753977142707" duration="994000" />
      <workItem from="1753978153227" duration="39000" />
      <workItem from="1753978199594" duration="418000" />
      <workItem from="1753978628716" duration="3919000" />
      <workItem from="1753993463053" duration="2742000" />
      <workItem from="1753996267515" duration="2990000" />
      <workItem from="1754021660822" duration="8297000" />
      <workItem from="1754032575325" duration="7375000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/ru/testtask/Main.java</url>
          <line>13</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/api-gateway/src/main/java/ru/testtask/ApiGatewayApplication.java</url>
          <line>15</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/notification-common/src/main/java/ru/testtask/Main.java</url>
          <line>13</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>